package com.tribehired.test.Service;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import com.tribehired.test.Model.Comment;
import com.tribehired.test.Model.Post;

public class PostServiceImpl implements PostService {

	@Autowired
	private RestTemplate restTemplate;

	@Override
	public List<Post> list() {

		return null;
	}

	private List<Comment> comments() {
		ResponseEntity<List<Comment>> commentResponse = restTemplate.exchange(
				"https://jsonplaceholder.typicode.com/comments", HttpMethod.GET, null,
				new ParameterizedTypeReference<List<Comment>>() {
				});
		List<Comment> comments = commentResponse.getBody();
		Map<Long, Long> commentCountMap = comments.stream().collect(Collectors.groupingBy(Comment::getPostId, Collectors.counting()));
		return commentResponse.getBody();
	}
	
	private Map<Long, Long> sortByTotalComments(Map<Long, Long> commentCount) {
		return commentCount.entrySet()
				.stream()
				.sorted(Map.Entry.<Long, Long> comparingByValue().reversed())
				.collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (e1, e2) -> e1, LinkedHashMap::new));
	}

}
